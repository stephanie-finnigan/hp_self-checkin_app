@model SelfCheckinWebApp.ViewModels.BookingViewModel
@using SelfCheckinWebApp.Enums
@{
    ViewBag.Title = "Booking Details";
    Layout = "~/Views/Shared/_Layout.cshtml";

    const string answerYes = "Yes";
    const string answerNo = "No";
    var mode = ViewBag.Mode;
    var featureSwitchValues = ViewBag.featureSwitchValues;
    var costVal = featureSwitchValues[FeatureSwitchEnum.BkgCost];
}

<div class="bkg-info">
    <div class="bkg-ref">
        @Html.LabelFor(model => model.BookingID)
        @Html.DisplayFor(model => model.BookingID)
    </div>
    @if (!string.IsNullOrEmpty(mode))
    {
        <div class="bkg-rm">
            @Html.LabelFor(model => model.FirstNightRoomNo)
            @Html.DisplayFor(model => model.FirstNightRoomNo)
        </div>
    }
</div>
<hr />
<div class="details-header">
    <div class="col-xs-12 col-md-12 details-title">Booking Details&nbsp;
        @if (!string.IsNullOrEmpty(mode))
        {
            <a href="#" data-toggle="modal" data-target="#bkgNotes"><i class="glyphicon glyphicon-info-sign" aria-hidden="true"></i></a>
        }
    </div>
</div>
<div class="booking-info">
    <div class="row">
        <div class="col-xs-6 col-md-6">
            @Html.LabelFor(model => model.Arrival)
            <div class="detail">
                @Html.DisplayFor(model => model.Arrival)
            </div>
        </div>
        <div class="col-xs-6 col-md-6">
            @Html.LabelFor(model => model.Depart)
            <div class="detail">
                @Html.DisplayFor(model => model.Depart)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-12">
            @Html.LabelFor(model => model.NightsTotal)
            <div class="detail">
                @Html.DisplayFor(model => model.NightsTotal)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="@(Model.Child == 0 ? "col-xs-6 col-md-6" : "col-xs-3 col-md-4")">
            @Html.LabelFor(model => model.Adults)
            <div class="detail">
                @Html.DisplayFor(model => model.Adults)
            </div>
        </div>
        <div class="@(Model.Child == 0 ? "col-xs-6 col-md-6" : "col-xs-4 col-md-4")">
            @Html.LabelFor(model => model.Child)
            <div class="detail">
                @Html.DisplayFor(model => model.Child)
            </div>
        </div>
        @if (Model.Child != 0)
        {
            <div class="col-xs-5 col-md-4">
                @Html.LabelFor(model => model.ChildAges)
                <div class="detail">
                    @if (string.IsNullOrEmpty(Model.ChildAges))
                    {
                        @Html.Raw("None")
                    }
                    else
                    {
                        @Html.DisplayFor(model => model.ChildAges)
                    }
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-12">
            @Html.LabelFor(model => model.FirstNightRoomDesc)
            <div class="detail">
                @Html.DisplayFor(model => model.FirstNightRoomDesc)
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-md-12">
            @Html.LabelFor(model => model.FirstNightPackage)
            <div class="detail">
                @Html.DisplayFor(model => model.FirstNightPackage)
            </div>
        </div>
    </div>
    <div class="row">
        @if (Model.HideRateOnArrival == false)
        {
            <div class="col-xs-6 col-md-6">
                @if (costVal == "total")
                {
                    @Html.LabelFor(model => model.TotalCost)
                }
                else if (costVal == "first")
                {
                    @Html.LabelFor(model => model.FirstNightRate)
                }
                <div class="detail">
                    @if (costVal == "total")
                    {
                        @Html.Raw("&pound;")
                        @Html.DisplayFor(model => model.TotalCost)
                    }
                    else if (costVal == "first")
                    {
                        @Html.Raw("&pound;")
                        @Html.DisplayFor(model => model.FirstNightRate)
                    }
                </div>
            </div>
        } 
        <div class="@(Model.HideRateOnArrival == true ? "col-xs-12 col-md-12" : "col-xs-6 col-md-6")">
            @Html.LabelFor(model => model.Deposit)
            <div class="detail">
                @Html.Raw("&pound;")
                @Html.DisplayFor(model => model.Deposit)
            </div>
        </div>
    </div>
    @if (Model.HideRateOnArrival == false)
    {
        <div class="row">
            <div class="col-xs-12 col-md-12">
                @Html.LabelFor(model => model.Balance)
                <div class="detail">
                    @Html.Raw("&pound;")
                    @Html.DisplayFor(model => model.Balance)
                </div>
            </div>
        </div>
    }
</div>

@using (Html.BeginForm("ConfirmBookingDetails", "CheckIn", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="yes-no-ques">
        <text>Are these booking details correct?</text>
        <div class="form-group">
            <div class="radio-inline">
                @Html.RadioButton("Answer", answerYes, new { @id = "selectedYes" })
                @Html.Label("Yes")
            </div>
            <div class="radio-inline">
                @Html.RadioButton("Answer", answerNo, new { @id = "selectedNo" })
                @Html.Label("No")
            </div>
        </div>
    </div>
    <hr />
    <footer>
        <div class="back-btn">
            @Html.ActionLink("Back", "ContactDetails", "CheckIn", new { @class = "btn btn-primary" })
        </div>
        <div class="proceed-btn">
            <input type="submit" value="Proceed" class="btn btn-primary" id="proceedBtn" />
        </div>
    </footer>
}

<div class="modal fade" id="bkgNotes" tabindex="-1" role="dialog" aria-labelledby="bkgNotesLabel" aria-hidden="true">
    <div class="modal-dialog-bkg-notes">
        <div class="modal-content">
            @Html.Partial("_BookingNotesPartial", Model)
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        // On window load, displays modal with booking notes if they exist
        $(window).on('load', function () {
            @if (!string.IsNullOrEmpty(Model.BookingNotes))
            {
                @:$("#bkgNotes").modal('show');
            }
        });

        $('.proceed-btn').toggle()
        var answer = $("input:radio[name='Answer']");

        $('input[name="Answer"]').on('change', function () {
            if ($("input:radio[name='Answer']").is(":checked")) {
                $('.proceed-btn').show();
            }
        }).change();
    </script>
}